***  Variables  ***

x=2 #int  assigning 2 to x,assigning value
y=5 #int 
# Python is a dynamically typed language,you don't need to specify the type of variable,whatever content you are assigning to a variable the that content decides the type.
xy=7.2 #float
# We need to assign the names of the variables descriptive way for readability.
c=2+4j #complex
s="hellow" #string 
# Double quotes or single quotes no difference between them.
# String is a sequance of characthers
s="12" #string
a,b=4,5.0 #mutliple assignment #a is a int #b is a float because of the decimal points
# Each variable keeps a space in memory. To free this space, we delete the variables we no longer use from the memory with this command.
del x 
print("x") #error
# We can see how many variable that we have rn in the memory with this command
%whos
x=5 #int
x=5.7 #float it changed now
print(type(x)) #<class 'int'>

***  Operators  ***


+ addition           // floor or integer division (10//3=3 just quotient)
- subtraction        ** to the power of
/ division
% mod (27%5=2)
* multiplication

# tab completion
# esc m to markdown
# shift enter to new cell
# float > integer so 6+3.2= float
# if you don't assign your variable anywhere like you code directly like 10/3 it is assigning to _(underscore) by default
# underscore is contains most recent variable or operator that we've created
# we shouldn't assign anything to _ because we can't use python built in proparties properly
# we can start with a underscore when we named the variables but nothing else
# camelNotation

***  Type Bool and Comparisons  ***

# bool = True,False
# and(binary operator it takes two),or,not(unary operator it just takes one variable)
not(True) = False
# only one equal sign means assignment =,two equal sign means we are checking wheter the two values are equal or not ==
# != not equal the result is true if the two variables are different from each other

!!! 3==3.0  TRUE !!!
# because they are comparing the values by discarding the decimal points.
# int gets implicitly converted to float in this case.

***  Some Useful Functions  ***

# Functions are sometimes,particularly a built in function is basically a feature form the language that is supplied for users to achieve particular task.

* Round Function *

# Round functios finds the nearest integer
# round(4.6)=5  round is a Function 4.6 is a "argument"
# round(4.3)=4  round is a Function 4.3 is a "argument"
# round(4.55842,3) 4.558 the result will be there decimal places

* Divmod Function *

  divmod(x,y)  = (quotient,reminder)
# divmod(27,5) = (5,2) if we have 2 or more elements we call these "tuples" ordered list
# divmod = (//,%) is the same thing

* isinstance Function *

# Returns True if the first argument is an instance of that class. Multiple classes can also be checked at once. 
# print(isinstance(1,int))   True
# print(isinstance(1.0,int)) False
# print(isinstance(1.0,(int,float))) if it is one of these returns True

* Power Function *

# pow(x,y,z) = x raise to the power y and remainder by z (x**y)%z
# pow(2,4,7) = 2 -> 2**4=16%7=2

* Input Function *

# a= input("Enter something") whatever the user enter here it is string even if 34 it is also string we will convert afterwards.
x=input("enter a number : ")
type(x) -> str
x = int(x) 
type(x) -> int we converted str to int

a = float(input("Enter a real number : "))

# pow?,pow??,help(pow),help(input) we can check like this how can we use one function

***  Control Flow  ***
if b>a:
  print("b is greater than a")
else:
  print("a is greater than b")

------------

a = int(input())
b = int(input())
if a>b:
    print("a is greater than b,a and b:",a,b)
elif a==b:
    print("a and b are equal,a and b:",a,b)
else:
    print("b is greater than a,a and b:",a,b)

------Short Form of If Else-------

a=9
b=10
print("A") if a>b else print("=") if a==b else print("B")

--------Calculating Grade----------

a = int(input("Enter Marks: "))
if a>=85:
    print("A grade")
elif (a>=80) and (a<85):
    print("A- grade")
elif (a>=75) and (a<80):
    print("B grade")
elif (a>=70) and (a<75):
    print("B- grade")
else:
    print("Below Avarage")
